<template>
  <view class="container">
    <view class="page page-list {{ tab === 0 ? 'visible' : 'hide' }}">
      <list></list>
    </view>
    <view class="page" wx:if="{{ tab === 1 }}">
      <message></message>
    </view>
    <view class="page" wx:if="{{ tab === 2 }}">
      <user></user>
    </view>
  </view>
  <view class="tabs">
    <view class="tab" @tap="switchTapTo(0)">
      <image src="../assets/svgs/home-fill.svg" wx:if="{{ tab === 0 }}"></image>
      <image src="../assets/svgs/home.svg"      wx:else></image>
      <view class="badge" wx:if="{{ unreadList !== 0 }}"></view>
    </view>
    <view class="tab" @tap="switchTapTo(1)">
      <image src="../assets/svgs/message-fill.svg" wx:if="{{ tab === 1 }}"></image>
      <image src="../assets/svgs/message.svg"      wx:else></image>
      <view class="badge badge-number" wx:if="{{ unreadMessages !== 0 }}">{{ unreadMessages }}</view>
    </view>
    <view class="tab" @tap="switchTapTo(2)">
      <image src="../assets/svgs/my-fill.svg" wx:if="{{ tab === 2 }}"></image>
      <image src="../assets/svgs/my.svg"      wx:else></image>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import store from '../store'
import interfaces from '../interfaces'

// tabs
import list from './list'
import message from './message'
import user from './user'

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '深大的树洞'
  }

  components = {
    list,
    message,
    user
  }

  data = {
    tab: 0,
    unreadList: 0,
    unreadMessages: 1,
    userinfo: store.state.userinfo,
    tabs: ['list', 'message', 'user']
  }

  methods = {
    switchTapTo (tabIndex) {
      tabIndex = parseInt(tabIndex)

      if (this.tab === tabIndex) {
        this.$invoke(this.tabs[tabIndex], 'onReload')
      } else {
        this.tab = tabIndex
        this.$invoke(this.tabs[tabIndex], 'onShow')
      }
    }
  }

  onShow () {
    const isNeedReloadList = wepy.getStorageSync('isNeedReloadList')
    if (isNeedReloadList === 'true') {
      // call list onShow in first load
      this.$invoke('list', 'onComponentLoad')
      wepy.setStorageSync('isNeedReloadList', 'false')
    }
  }

  onPullDownRefresh () {
    this.$invoke(this.tabs[this.tab], 'onPullDownRefresh')
  }

  onReachBottom () {
    this.$invoke(this.tabs[this.tab], 'onReachBottom')
  }

  async onLoad () {
    try {
      await interfaces.login()
    } catch (e) {
      wepy.showModal({
        title: '提示',
        content: `用户登录失败，请截图本提示，并联系深大汪峰。${e.message}`
      })
    }

    // call list onShow in first load
    this.$invoke('list', 'onComponentLoad')
  }

  onShareAppMessage () {
    return {
      title: '深大树洞',
      desc: '深大树洞首页~快来匿名发表树洞啊~',
      path: '/pages/index'
    }
  }
}
</script>

<style lang="less">
.page {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.page-list {
  position: static;
}
.visible {
  visibility: visible;
}
.hide {
  visibility: hidden;
}

.tabs {
  position: fixed;
  left: 0;
  bottom: 0;
  height: 50px;
  width: 100%;
  background: #FDFDFD;
  border-top: 1px solid #DDD;
  user-select: none;

  .tab {
    float: left;
    position: relative;
    width: 33.333333%;
    height: 50px;
    padding-top: 10px;
    text-align: center;
    user-select: none;

    image {
      width: 30px;
      height: 30px;
    }

    .badge {
      position: absolute;
      left: 50%;
      top: 12px;
      margin-left: 10px;
      width: 5px;
      height: 5px;
      border-radius: 50%;
      background: #FA6570;
      border: 1px solid #FDFDFD;
    }

    .badge-number {
      top: 7px;
      margin-left: 6px;
      width: 17px;
      height: 17px;
      border-radius: 50%;
      color: #FFF;
      font-size: 10px;
      font-weight: bold;
      text-align: center;
      line-height: 17px;
    }

    .badge-number-width {
      padding: 0 2px;
      width: auto;
      border-radius: 8px;
    }
  }
}
</style>
